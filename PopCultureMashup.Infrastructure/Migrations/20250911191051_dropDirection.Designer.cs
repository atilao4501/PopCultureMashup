// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PopCultureMashup.Infrastructure.Persistence;

#nullable disable

namespace PopCultureMashup.Infrastructure.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250911191051_dropDirection")]
    partial class dropDirection
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("PopCultureMashup.Domain.Entities.Feedback", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("SYSUTCDATETIME()");

                    b.Property<Guid>("ItemId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("RecommendationId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<short>("Value")
                        .HasColumnType("smallint");

                    b.HasKey("Id");

                    b.HasIndex("ItemId");

                    b.HasIndex("RecommendationId");

                    b.ToTable("Feedback", (string)null);
                });

            modelBuilder.Entity("PopCultureMashup.Domain.Entities.Item", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ExternalId")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<double?>("Popularity")
                        .HasColumnType("float");

                    b.Property<string>("Source")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("nvarchar(32)");

                    b.Property<string>("Summary")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<byte>("Type")
                        .HasColumnType("tinyint");

                    b.Property<int?>("Year")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Source", "ExternalId")
                        .IsUnique();

                    b.HasIndex("Type", "Title");

                    b.ToTable("Items", (string)null);
                });

            modelBuilder.Entity("PopCultureMashup.Domain.Entities.ItemCreator", b =>
                {
                    b.Property<Guid>("ItemId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatorName")
                        .HasMaxLength(160)
                        .HasColumnType("nvarchar(160)");

                    b.Property<string>("Slug")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ItemId", "CreatorName");

                    b.HasIndex("CreatorName");

                    b.ToTable("ItemCreators", (string)null);
                });

            modelBuilder.Entity("PopCultureMashup.Domain.Entities.ItemGenre", b =>
                {
                    b.Property<Guid>("ItemId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Genre")
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.HasKey("ItemId", "Genre");

                    b.HasIndex("Genre");

                    b.ToTable("ItemGenres", (string)null);
                });

            modelBuilder.Entity("PopCultureMashup.Domain.Entities.ItemTheme", b =>
                {
                    b.Property<Guid>("ItemId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Theme")
                        .HasMaxLength(120)
                        .HasColumnType("nvarchar(120)");

                    b.Property<string>("Slug")
                        .IsRequired()
                        .HasMaxLength(120)
                        .HasColumnType("nvarchar(120)");

                    b.HasKey("ItemId", "Theme");

                    b.HasIndex("Slug");

                    b.HasIndex("Theme");

                    b.ToTable("ItemThemes", (string)null);
                });

            modelBuilder.Entity("PopCultureMashup.Domain.Entities.RecommendationResult", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("FranchiseBonus")
                        .HasColumnType("decimal(9,6)");

                    b.Property<decimal>("GenresScore")
                        .HasColumnType("decimal(9,6)");

                    b.Property<Guid>("ItemId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("PopularityScore")
                        .HasColumnType("decimal(9,6)");

                    b.Property<int>("Rank")
                        .HasColumnType("int");

                    b.Property<Guid>("RecommendationId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("Score")
                        .HasColumnType("decimal(9,6)");

                    b.Property<decimal>("TextScore")
                        .HasColumnType("decimal(9,6)");

                    b.Property<decimal>("ThemesScore")
                        .HasColumnType("decimal(9,6)");

                    b.Property<decimal>("YearScore")
                        .HasColumnType("decimal(9,6)");

                    b.HasKey("Id");

                    b.HasIndex("ItemId");

                    b.HasIndex("RecommendationId", "Rank")
                        .IsUnique();

                    b.ToTable("RecommendationResults", (string)null);
                });

            modelBuilder.Entity("PopCultureMashup.Domain.Entities.Seed", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("SYSUTCDATETIME()");

                    b.Property<Guid>("ItemId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("ItemId");

                    b.HasIndex("UserId", "CreatedAt")
                        .IsDescending(false, true);

                    b.HasIndex("UserId", "ItemId")
                        .IsUnique();

                    b.ToTable("Seeds", (string)null);
                });

            modelBuilder.Entity("PopCultureMashup.Domain.Entities.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("SYSUTCDATETIME()");

                    b.Property<string>("Name")
                        .HasMaxLength(120)
                        .HasColumnType("nvarchar(120)");

                    b.HasKey("Id");

                    b.ToTable("Users", (string)null);
                });

            modelBuilder.Entity("PopCultureMashup.Domain.Entities.Weight", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("Franchise")
                        .HasColumnType("float");

                    b.Property<double>("Genres")
                        .HasColumnType("float");

                    b.Property<double>("Popularity")
                        .HasColumnType("float");

                    b.Property<double>("Text")
                        .HasColumnType("float");

                    b.Property<double>("Themes")
                        .HasColumnType("float");

                    b.Property<DateTime>("UpdatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("SYSUTCDATETIME()");

                    b.Property<Guid?>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("Year")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("UserId")
                        .IsUnique()
                        .HasFilter("[UserId] IS NOT NULL");

                    b.ToTable("Weights", (string)null);
                });

            modelBuilder.Entity("Recommendation", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("SYSUTCDATETIME()");

                    b.Property<decimal?>("NoveltyW")
                        .HasColumnType("decimal(5,4)");

                    b.Property<decimal?>("PopularityW")
                        .HasColumnType("decimal(5,4)");

                    b.Property<decimal?>("RecencyW")
                        .HasColumnType("decimal(5,4)");

                    b.Property<decimal?>("SimilarityW")
                        .HasColumnType("decimal(5,4)");

                    b.Property<int>("TotalCandidates")
                        .HasColumnType("int");

                    b.Property<int>("TotalReturned")
                        .HasColumnType("int");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("UserId", "CreatedAt")
                        .IsDescending(false, true);

                    b.ToTable("Recommendations", (string)null);
                });

            modelBuilder.Entity("PopCultureMashup.Domain.Entities.Feedback", b =>
                {
                    b.HasOne("PopCultureMashup.Domain.Entities.Item", null)
                        .WithMany()
                        .HasForeignKey("ItemId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Recommendation", null)
                        .WithMany()
                        .HasForeignKey("RecommendationId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("PopCultureMashup.Domain.Entities.ItemCreator", b =>
                {
                    b.HasOne("PopCultureMashup.Domain.Entities.Item", null)
                        .WithMany("Creators")
                        .HasForeignKey("ItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PopCultureMashup.Domain.Entities.ItemGenre", b =>
                {
                    b.HasOne("PopCultureMashup.Domain.Entities.Item", null)
                        .WithMany("Genres")
                        .HasForeignKey("ItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PopCultureMashup.Domain.Entities.ItemTheme", b =>
                {
                    b.HasOne("PopCultureMashup.Domain.Entities.Item", null)
                        .WithMany("Themes")
                        .HasForeignKey("ItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PopCultureMashup.Domain.Entities.RecommendationResult", b =>
                {
                    b.HasOne("PopCultureMashup.Domain.Entities.Item", null)
                        .WithMany()
                        .HasForeignKey("ItemId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Recommendation", null)
                        .WithMany("Results")
                        .HasForeignKey("RecommendationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PopCultureMashup.Domain.Entities.Seed", b =>
                {
                    b.HasOne("PopCultureMashup.Domain.Entities.Item", "Item")
                        .WithMany()
                        .HasForeignKey("ItemId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Item");
                });

            modelBuilder.Entity("PopCultureMashup.Domain.Entities.Item", b =>
                {
                    b.Navigation("Creators");

                    b.Navigation("Genres");

                    b.Navigation("Themes");
                });

            modelBuilder.Entity("Recommendation", b =>
                {
                    b.Navigation("Results");
                });
#pragma warning restore 612, 618
        }
    }
}
